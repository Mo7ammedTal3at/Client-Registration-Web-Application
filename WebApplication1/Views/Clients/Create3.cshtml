@model Domain.Client

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<div class="col-xs-12 justify-content-center">
    @using (Html.BeginForm("Create", "Clients", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
         
            TimeZone t = TimeZone.CurrentTimeZone;
            @*@Html.HiddenFor(model=>model.TimeZone,new { value = "" });*@
            <input id="TimeZone" name="TimeZone" type="hidden" value="@t.StandardName">
        <div class="form-horizontal">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="clientImage" class="form-control" />
                    @*@Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })*@
                    @* @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CountryID, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, "Date of birth", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*<div class="input-group date " data-provide="datepicker">
                        <input type="text" style="display:inline-block" class="form-control ">
                        <div class='input-group-addon datepicker'>
                            <span class='glyphicon glyphicon-th'></span>
                        </div>
                    </div>*@
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { style = "display:inline-block", @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NationalityID, "Nationality", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("NationalityID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NationalityID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Gender, "Gender", new { @class="control-label col-md-2"})
                <div  class="col-md-10">
                    @*<div  class="form-check">
                        <input class="form-check-input" name="Gender" type="radio" id="radio120" value="1" checked="checked">
                        <label class="form-check-label" style="padding-right:15px;" for="radio120">Male</label>
                    </div>

                    <div class="form-check">
                        <input class="form-check-input" name="Gender" type="radio" value="0" id="radio121">
                        <label class="form-check-label" style="padding-right:15px;" for="radio121">Female</label>
                    </div>
                    
                </div>*@
                <div class="col-xs-6 col-md-2">
                    <label class="control-label" style="padding-right:15px;">Male</label>
                    <input type="radio" name="Gender" value="1"  checked/>
                </div>
                <div class="col-xs-6 col-md-2">
                    <label class="control-label " style="padding-right:15px;">Female</label>
                    <input type="radio" name="Gender" value="0" />
                </div>   
                </div>
                </div>
            @*<div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label class="form-control">Male</label>
                    <input type="radio" name="Gender" value="1" class="form-control"/>
                    <label class="form-control">Female</label>
                    <input type="radio" name="Gender" value="0" class="form-control"/>
                    @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>() { new SelectListItem() { Value = "M", Text = "Male" }, new SelectListItem() { Value = "F", Text = "Female" } }, new { @class = "form-control" })
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.JobCode, "Job", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("JobCode", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.JobCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.isAdmin, "Admin", htmlAttributes: new { @class = "control-label col-md-2" })*@
                
                <div class="col-md-offset-2 col-md-10">
                    <div class="col-xs-6 col-md-2">
                        <label class="control-label" style="padding-right:15px;">Admin</label>
                        <input type="checkbox" name="isAdmin" value="1" />
                    </div>
                    <div class="col-xs-6 col-md-2">
                        <label class="control-label " style="padding-right:15px;">Guest</label>
                        <input type="checkbox" name="Guest" class="" value="1" />
                    </div>                              
                   @* @Html.DropDownListFor(model => model.isAdmin, new List<SelectListItem>() { new SelectListItem() { Value = "y", Text = "Admin" }, new SelectListItem() { Value = "n", Text = "Guest" } }, new { @class = "form-control" })*@
                    @*@Html.EditorFor(model => model.isAdmin, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.isAdmin, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.isGuest,"Guest", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="checkbox" name="Guest" class="form-control" />
                        @Html.EditorFor(model => model.isGuest, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.isGuest, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.SchoolName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SchoolName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SchoolName, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.TimeZone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.TimeZone, (IEnumerable<SelectListItem>)ViewBag.Timezone, new { @class = "form-control" })
                    @Html.EditorFor(model => model.TimeZone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeZone, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.DeviceToken, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeviceToken, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeviceToken, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
